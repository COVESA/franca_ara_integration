/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.12.v201805221014.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_GENIVI_AASR_SHOWCASE_I_Vehicles_STUB_DEFAULT_HPP_
#define V1_GENIVI_AASR_SHOWCASE_I_Vehicles_STUB_DEFAULT_HPP_


#include <CommonAPI/Export.hpp>

#include <v1/genivi/aasr/showcase/IVehiclesStub.hpp>
#include <sstream>

# if defined(_MSC_VER)
#  if _MSC_VER >= 1300
/*
 * Diamond inheritance is used for the CommonAPI::Proxy base class.
 * The Microsoft compiler put warning (C4250) using a desired c++ feature: "Delegating to a sister class"
 * A powerful technique that arises from using virtual inheritance is to delegate a method from a class in another class
 * by using a common abstract base class. This is also called cross delegation.
 */
#    pragma warning( disable : 4250 )
#  endif
# endif

namespace v1 {
namespace genivi {
namespace aasr {
namespace showcase {

/**
 * Provides a default implementation for IVehiclesStubRemoteEvent and
 * IVehiclesStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 *
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class COMMONAPI_EXPORT_CLASS_EXPLICIT IVehiclesStubDefault
    : public virtual IVehiclesStub {
public:
    COMMONAPI_EXPORT IVehiclesStubDefault();

    COMMONAPI_EXPORT IVehiclesStubRemoteEvent* initStubAdapter(const std::shared_ptr< IVehiclesStubAdapter> &_adapter);

    COMMONAPI_EXPORT const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client);

    COMMONAPI_EXPORT virtual const ::v1::genivi::aasr::showcase::IVehicles::ListOfVehicles& getVehiclesAttribute();
    COMMONAPI_EXPORT virtual const ::v1::genivi::aasr::showcase::IVehicles::ListOfVehicles& getVehiclesAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    COMMONAPI_EXPORT virtual void setVehiclesAttribute(::v1::genivi::aasr::showcase::IVehicles::ListOfVehicles _value);
    COMMONAPI_EXPORT virtual void setVehiclesAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::genivi::aasr::showcase::IVehicles::ListOfVehicles _value);

    COMMONAPI_EXPORT virtual void SetFloatingPointPrecision(const std::shared_ptr<CommonAPI::ClientId> _client, IVehicles::FloatingPointPrecision _precision, SetFloatingPointPrecisionReply_t _reply);


    
protected:
    COMMONAPI_EXPORT virtual bool trySetVehiclesAttribute(::v1::genivi::aasr::showcase::IVehicles::ListOfVehicles _value);
    COMMONAPI_EXPORT virtual bool validateVehiclesAttributeRequestedValue(const ::v1::genivi::aasr::showcase::IVehicles::ListOfVehicles &_value);
    COMMONAPI_EXPORT virtual void onRemoteVehiclesAttributeChanged();
    class COMMONAPI_EXPORT_CLASS_EXPLICIT RemoteEventHandler: public virtual IVehiclesStubRemoteEvent {
    public:
        COMMONAPI_EXPORT RemoteEventHandler(IVehiclesStubDefault *_defaultStub);

        COMMONAPI_EXPORT virtual bool onRemoteSetVehiclesAttribute(::v1::genivi::aasr::showcase::IVehicles::ListOfVehicles _value);
        COMMONAPI_EXPORT virtual bool onRemoteSetVehiclesAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::genivi::aasr::showcase::IVehicles::ListOfVehicles _value);
        COMMONAPI_EXPORT virtual void onRemoteVehiclesAttributeChanged();


    private:
        IVehiclesStubDefault *defaultStub_;
    };
protected:
    IVehiclesStubDefault::RemoteEventHandler remoteEventHandler_;

private:

    ::v1::genivi::aasr::showcase::IVehicles::ListOfVehicles vehiclesAttributeValue_ {};

    CommonAPI::Version interfaceVersion_;
};

} // namespace showcase
} // namespace aasr
} // namespace genivi
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_GENIVI_AASR_SHOWCASE_I_Vehicles_STUB_DEFAULT
